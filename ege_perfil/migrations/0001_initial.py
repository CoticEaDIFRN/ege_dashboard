# Generated by Django 2.1.4 on 2019-01-02 18:41

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, primary_key=True, serialize=False, verbose_name='usuário')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='membro da equipe')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='status de superusuário')),
                ('is_personal_email_public', models.NullBooleanField(verbose_name='show to all')),
                ('biografy', models.TextField(blank=True, null=True, verbose_name='biografy')),
                ('is_biografy_public', models.TextField(blank=True, null=True, verbose_name='show to all')),
                ('valid_photo', models.FileField(upload_to='', verbose_name='valid photo')),
                ('pending_photo', models.FileField(upload_to='', verbose_name='pending photo')),
                ('solicitation_at', models.DateTimeField(blank=True, null=True, verbose_name='solicitation_at')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='approved at')),
                ('approved_by', models.CharField(blank=True, max_length=250, null=True, verbose_name='approved by')),
                ('font_size', models.SmallIntegerField(blank=True, null=True, verbose_name='font size')),
                ('theme_skin', models.CharField(blank=True, choices=[('default', 'Padrão')], max_length=250, null=True, verbose_name='theme skin')),
                ('legends', models.NullBooleanField(verbose_name='legends')),
                ('sign_language', models.NullBooleanField(verbose_name='sign language')),
                ('screen_reader', models.NullBooleanField(verbose_name='screen reader')),
                ('is_special_needs_public', models.NullBooleanField(verbose_name='show to all')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SpecialNeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='nome')),
                ('category', models.CharField(choices=[('Visão', 'Visão'), ('Audição', 'Audição'), ('Outras', 'Outras')], max_length=250, verbose_name='category')),
            ],
            options={
                'verbose_name': 'special need',
                'verbose_name_plural': 'special needs',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='special_needs',
            field=models.ManyToManyField(to='ege_perfil.SpecialNeed', verbose_name='special needs'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
